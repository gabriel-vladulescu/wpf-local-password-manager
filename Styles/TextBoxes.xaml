<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:helpers="clr-namespace:AccountManager.Utilities.Helpers">

    <Style x:Key="AdvancedTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource InputTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="12,12,12,14"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <StackPanel UseLayoutRounding="True" SnapsToDevicePixels="True">
                        <Grid>
                            <!-- Main Input Border -->
                            <Border x:Name="MainBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="16"
                                    UseLayoutRounding="True"
                                    SnapsToDevicePixels="True">
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost"
                                                Margin="{TemplateBinding Padding}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                UseLayoutRounding="True"/>
                                    
                                    <!-- Placeholder Text (default hidden) -->
                                    <TextBlock x:Name="PlaceholderText"
                                              Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.Placeholder)}"
                                              Foreground="{DynamicResource TextSecondaryColor}"
                                              FontSize="{TemplateBinding FontSize}"
                                              FontWeight="Normal"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              IsHitTestVisible="False"
                                              Opacity="0.6"
                                              Visibility="Collapsed"
                                              UseLayoutRounding="True"
                                              SnapsToDevicePixels="True"
                                              TextOptions.TextRenderingMode="ClearType"/>
                                </Grid>
                            </Border>

                            <!-- Label with Corner Radius -->
                            <Border x:Name="Label"
                                    Background="{DynamicResource InputLabelBackgroundColor}"
                                    IsHitTestVisible="False"
                                    Margin="16,-9,0,0"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Left"
                                    Padding="6,1"
                                    CornerRadius="4">
                                <TextBlock x:Name="HintText"
                                          Text="{Binding Path=(helpers:TextBoxHelper.Label), RelativeSource={RelativeSource TemplatedParent}}"
                                          Foreground="{DynamicResource InputLabelTextColor}"
                                          FontSize="13"
                                          Opacity="1.0">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform x:Name="HintTransform" Y="0"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Border>

                            <!-- Character Counter (bottom right) -->
                            <TextBlock x:Name="CharacterCounter"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Bottom"
                                      Margin="0,0,8,4"
                                      FontSize="11"
                                      Foreground="{DynamicResource TextSecondaryColor}"
                                      IsHitTestVisible="False"
                                      UseLayoutRounding="True"
                                      SnapsToDevicePixels="True"
                                      TextOptions.TextRenderingMode="ClearType">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}/{1}">
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Text.Length"/>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(helpers:TextBoxHelper.MaxChars)"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>

                        <!-- Info Text Below -->
                        <Grid Margin="0,4,4,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <materialDesign:PackIcon Grid.Column="0" Kind="InformationOutline" 
                                Width="13" Height="13"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                Margin="0,0,4,0"/>
                            <!-- Info Text (Left) -->
                            <TextBlock x:Name="InfoText"
                                      Grid.Column="1"
                                      Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.Info)}"
                                      Foreground="{DynamicResource TextSecondaryColor}"
                                      FontSize="12"
                                      FontWeight="Normal"
                                      UseLayoutRounding="True"
                                      SnapsToDevicePixels="True"
                                      TextOptions.TextRenderingMode="ClearType"
                                      TextWrapping="Wrap"
                                      VerticalAlignment="Center"/>
                        </Grid>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <!-- Show placeholder ONLY when text is empty AND not focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        
                        <!-- Also show when text is null and not focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="{x:Null}"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        
                        <!-- Hide Label -->
                        <Trigger Property="helpers:TextBoxHelper.Label" Value="">
                            <Setter TargetName="Label" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="helpers:TextBoxHelper.Label" Value="{x:Null}">
                            <Setter TargetName="Label" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        
                        <!-- Focus State -->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource InputFocusBrush}"/>
                            <Setter TargetName="MainBorder" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        
                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource InputFocusBrush}"/>
                        </Trigger>

                        <!-- Hide info text if empty -->
                        <Trigger Property="helpers:TextBoxHelper.Info" Value="">
                            <Setter TargetName="InfoText" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="helpers:TextBoxHelper.Info" Value="{x:Null}">
                            <Setter TargetName="InfoText" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- Hide character counter if no limit set -->
                        <Trigger Property="helpers:TextBoxHelper.MaxChars" Value="0">
                            <Setter TargetName="CharacterCounter" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        

                        <!-- Warning state when approaching limit (80% of max) -->
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource CharacterLimitConverter}">
                                    <Binding RelativeSource="{RelativeSource Self}" Path="Text.Length"/>
                                    <Binding RelativeSource="{RelativeSource Self}" Path="(helpers:TextBoxHelper.MaxChars)"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter TargetName="CharacterCounter" Property="Foreground" Value="{DynamicResource WarningColor}"/>
                        </DataTrigger>

                        <!-- Error state when over limit -->
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource CharacterLimitExceededConverter}">
                                    <Binding RelativeSource="{RelativeSource Self}" Path="Text.Length"/>
                                    <Binding RelativeSource="{RelativeSource Self}" Path="(helpers:TextBoxHelper.MaxChars)"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter TargetName="CharacterCounter" Property="Foreground" Value="{DynamicResource DangerColor}"/>
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource DangerColor}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>