<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:services="clr-namespace:AccountManager.Services">

    <Style x:Key="AccountCard" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#1E293B" Opacity="0.8"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#334155" Opacity="0.6"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="16"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Padding" Value="16,12,16,12"/>
        <Setter Property="Margin" Value="6"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="#6366F1"/>
        <Setter Property="materialDesign:RippleAssist.ClipToBounds" Value="True"/>
        <Setter Property="materialDesign:RippleAssist.IsCentered" Value="False"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Hover Effect -->
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                        To="1.02"
                                        Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                        To="1.02"
                                        Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <ColorAnimation Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                        To="#6366F1"
                                        Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                        To="1"
                                        Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="4"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                        To="1"
                                        Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="4"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <ColorAnimation Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                        To="#334155"
                                        Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Action Menu Button Style -->
    <Style x:Key="ActionMenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource InputBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Account Card Content Template -->
    <DataTemplate x:Key="AccountCardTemplate">
        <Grid Margin="6" x:Name="CardContainer">
            <!-- Main Card Background -->
            <Border x:Name="CardBackground"
                    Background="{DynamicResource CardBackgroundColor}"
                    BorderBrush="{DynamicResource BorderColor}"
                    BorderThickness="1"
                    CornerRadius="16"
                    UseLayoutRounding="True">
            </Border>
            
            <!-- Main Card Content -->
            <Border CornerRadius="16">
                <Border.InputBindings>
                    <MouseBinding MouseAction="LeftClick" 
                                Command="{Binding DataContext.EditAccountCommand, 
                                        RelativeSource={RelativeSource AncestorType=Window}}"
                                CommandParameter="{Binding}"/>
                </Border.InputBindings>
                
                <Grid>
                    <!-- Card Content -->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Open Website Corner Icon -->
                        <Border CornerRadius="0,16,0,16" 
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top" 
                                Width="32" 
                                Height="32" 
                                Panel.ZIndex="1"
                                Background="{DynamicResource InputBackgroundColor}"
                                Visibility="{Binding HasWebsite, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button Style="{StaticResource MaterialDesignIconButton}"
                                    ToolTip="Open Website"
                                    Command="{Binding DataContext.OpenWebsiteCommand,
                                            RelativeSource={RelativeSource AncestorType=Window}}"
                                    CommandParameter="{Binding}"
                                    Width="32" Height="32"
                                    Background="Transparent">
                                <materialDesign:PackIcon Kind="OpenInNew" 
                                                    Foreground="#94A3B8" 
                                                    Width="16" Height="16"/>
                            </Button>
                        </Border>

                        <!-- Content Section with Padding -->
                        <Border Grid.Row="0" 
                                Padding="14,14,14,14">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- Header with Avatar and Quick Actions -->
                                <Grid Grid.Row="0" Margin="0,0,0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Avatar -->
                                    <Border Grid.Column="0" 
                                        Background="{StaticResource PrimaryColor}"
                                        Width="40" Height="40" 
                                        CornerRadius="10">
                                        <TextBlock Text="{Binding Name, Converter={StaticResource FirstLetterConverter}, FallbackValue=A}" 
                                                Foreground="White"
                                                FontSize="16" 
                                                FontWeight="Bold"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                UseLayoutRounding="True"
                                                TextOptions.TextFormattingMode="Display"
                                                TextOptions.TextRenderingMode="ClearType"/>
                                    </Border>
                                    
                                    <!-- Account Name and Status -->
                                    <StackPanel Grid.Column="1" 
                                              VerticalAlignment="Center"
                                              Margin="12,0,30,0">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Name}" 
                                                    FontSize="16" 
                                                    FontWeight="Bold"
                                                    Foreground="{DynamicResource TextPrimaryColor}"
                                                    UseLayoutRounding="True"
                                                    TextOptions.TextFormattingMode="Display"
                                                    TextOptions.TextRenderingMode="ClearType"/>
                                            
                                        </StackPanel>
                                        
                                        <!-- Website URL (if available) -->
                                        <TextBlock Text="{Binding WebsiteDisplayUrl}" 
                                                 FontSize="12"
                                                 Foreground="{DynamicResource TextSecondaryColor}"
                                                 Visibility="{Binding HasWebsite, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    </StackPanel>
                                </Grid>

                                <!-- Account Details -->
                                <StackPanel Grid.Row="1" Margin="0,12,0,0">
                                    <!-- Email -->
                                    <Grid Margin="0,0,0,6">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Column="0"
                                                Text="Email" 
                                                Foreground="{DynamicResource TextSecondaryColor}"
                                                FontSize="14"/>
                                        
                                        <TextBlock Grid.Column="1"
                                                Foreground="{DynamicResource TextPrimaryColor}"
                                                FontSize="14"
                                                FontWeight="Medium">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource ConditionalTextConverter}">
                                                    <Binding Path="Email"/>
                                                    <Binding Source="{x:Static services:SettingsService.Instance}" Path="CensorAccountData"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                        
                                        <Button Grid.Column="2"
                                            Style="{StaticResource MaterialDesignIconButton}"
                                            Command="{Binding DataContext.CopyEmailCommand,
                                                    RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}"
                                            ToolTip="Copy Email"
                                            Width="24" Height="24">
                                            <materialDesign:PackIcon Kind="ContentCopy" 
                                                                Foreground="#94A3B8" 
                                                                Width="12" Height="12"/>
                                        </Button>
                                    </Grid>
                                    
                                    <!-- Username -->
                                    <Grid Margin="0,0,0,6">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Column="0"
                                                Text="Username" 
                                                Foreground="{DynamicResource TextSecondaryColor}"
                                                FontSize="14"/>
                                        
                                        <TextBlock Grid.Column="1"
                                                Foreground="{DynamicResource TextPrimaryColor}"
                                                FontSize="14"
                                                FontWeight="Medium">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource ConditionalTextConverter}">
                                                    <Binding Path="Username"/>
                                                    <Binding Source="{x:Static services:SettingsService.Instance}" Path="CensorAccountData"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                        
                                        <Button Grid.Column="2"
                                            Style="{StaticResource MaterialDesignIconButton}"
                                            Command="{Binding DataContext.CopyUsernameCommand,
                                                    RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}"
                                            ToolTip="Copy Username"
                                            Width="24" Height="24">
                                            <materialDesign:PackIcon Kind="ContentCopy" 
                                                                Foreground="#94A3B8" 
                                                                Width="12" Height="12"/>
                                        </Button>
                                    </Grid>
                                    
                                    <!-- Password -->
                                    <Grid Margin="0,0,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Column="0"
                                                Text="Password" 
                                                Foreground="{DynamicResource TextSecondaryColor}"
                                                FontSize="14"/>
                                        
                                        <TextBlock Grid.Column="1"
                                                Foreground="{DynamicResource TextPrimaryColor}"
                                                FontSize="14"
                                                FontWeight="Medium"
                                                UseLayoutRounding="True"
                                                TextOptions.TextFormattingMode="Display"
                                                TextOptions.TextRenderingMode="ClearType">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource PasswordDisplayConverter}">
                                                    <Binding Path="Password"/>
                                                    <Binding Source="{x:Static services:SettingsService.Instance}" Path="CensorPassword"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>

                                        <Button Grid.Column="2"
                                            Style="{StaticResource MaterialDesignIconButton}"
                                            ToolTip="Copy Password"
                                            Command="{Binding DataContext.CopyPasswordCommand,
                                                    RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}"
                                            Width="24" Height="24">
                                            <materialDesign:PackIcon Kind="ContentCopy" 
                                                                Foreground="#94A3B8" 
                                                                Width="12" Height="12"/>
                                        </Button>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </Border>

                        <!-- Full-Width Action Menu Bar at Bottom -->
                        <Border Grid.Row="1" 
                                Background="{DynamicResource InputBackgroundColor}"
                                BorderThickness="0"
                                CornerRadius="0,0,16,16"
                                Padding="16,8">
                            <StackPanel Orientation="Horizontal" 
                                       HorizontalAlignment="Center">
                                <!-- Star/Favorite Button -->
                                <Button Style="{StaticResource ActionMenuButton}"
                                        ToolTip="Mark as Favorite"
                                        Command="{Binding DataContext.ToggleFavoriteCommand,
                                                RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Width="50" Height="32"
                                        Margin="2"
                                        Visibility="{Binding ShowFavoriteIcon, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <materialDesign:PackIcon x:Name="StarIcon"
                                                        Kind="Star" 
                                                        Width="16" Height="16">
                                        <materialDesign:PackIcon.Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <Setter Property="Foreground" Value="{DynamicResource TextSecondaryColor}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsFavorite}" Value="True">
                                                        <Setter Property="Foreground" Value="#F59E0B"/>
                                                        <Setter Property="Kind" Value="Star"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsFavorite}" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource TextSecondaryColor}"/>
                                                        <Setter Property="Kind" Value="StarOutline"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:PackIcon.Style>
                                    </materialDesign:PackIcon>
                                </Button>

                                <!-- Separator -->
                                <Rectangle Width="1" 
                                         Fill="{DynamicResource CardBackgroundColor}" 
                                         Margin="4,6"/>
                                
                                <!-- Edit Button -->
                                <Button Style="{StaticResource ActionMenuButton}"
                                        ToolTip="Edit Account"
                                        Command="{Binding DataContext.EditAccountCommand,
                                                RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Width="50" Height="32"
                                        Margin="2">
                                    <materialDesign:PackIcon Kind="Pencil" 
                                                           Foreground="{DynamicResource PrimaryColor}" 
                                                           Width="16" Height="16"/>
                                </Button>
                                
                                <!-- Separator -->
                                <Rectangle Width="1" 
                                         Fill="{DynamicResource CardBackgroundColor}" 
                                         Margin="4,6"/>
                                
                                <!-- Archive Button - Hidden when viewing trash -->
                                <Button Width="50" Height="32" Margin="2">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource ActionMenuButton}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <!-- Hide archive button when viewing trash -->
                                                <DataTrigger Binding="{Binding DataContext.IsViewingTrash, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsArchived}" Value="False">
                                                    <Setter Property="ToolTip" Value="Archive Account"/>
                                                    <Setter Property="Command" Value="{Binding DataContext.ArchiveAccountCommand, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsArchived}" Value="True">
                                                    <Setter Property="ToolTip" Value="Restore Account"/>
                                                    <Setter Property="Command" Value="{Binding DataContext.RestoreAccountCommand, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.CommandParameter>
                                        <Binding/>
                                    </Button.CommandParameter>
                                    <materialDesign:PackIcon Width="16" Height="16">
                                        <materialDesign:PackIcon.Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <Setter Property="Kind" Value="Archive"/>
                                                <Setter Property="Foreground" Value="#8B5CF6"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsArchived}" Value="True">
                                                        <Setter Property="Kind" Value="ArchiveArrowUp"/>
                                                        <Setter Property="Foreground" Value="#10B981"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:PackIcon.Style>
                                    </materialDesign:PackIcon>
                                </Button>

                                <!-- Restore Button - Only shown when viewing trash -->
                                <Button Width="50" Height="32" Margin="2" 
                                        ToolTip="Restore Account"
                                        Command="{Binding DataContext.RestoreAccountCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource ActionMenuButton}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <!-- Show restore button only when viewing trash -->
                                                <DataTrigger Binding="{Binding DataContext.IsViewingTrash, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <materialDesign:PackIcon Kind="Restore" 
                                                           Foreground="#10B981" 
                                                           Width="16" Height="16"/>
                                </Button>
                                <!-- Separator -->
                                <Rectangle Width="1" 
                                         Fill="{DynamicResource CardBackgroundColor}" 
                                         Margin="4,6"/>
                                
                                <!-- Delete Button -->
                                <Button Style="{StaticResource ActionMenuButton}"
                                        ToolTip="Delete Account"
                                        Command="{Binding DataContext.DeleteAccountCommand,
                                                RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Width="50" Height="32"
                                        Margin="2">
                                    <materialDesign:PackIcon Kind="Delete" 
                                                           Foreground="#EF4444" 
                                                           Width="16" Height="16"/>
                                </Button>
                            </StackPanel>
                        </Border>
                    </Grid>
                </Grid>
            </Border>
            
            <!-- Hover/Animation Triggers - Only border color change -->
            <Grid.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- Card Border -->
                            <ColorAnimation Storyboard.TargetName="CardBackground"
                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                        To="#6366F1"
                                        Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- Card Border -->
                            <ColorAnimation Storyboard.TargetName="CardBackground"
                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                        Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
        </Grid>
    </DataTemplate>

</ResourceDictionary>