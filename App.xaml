<Application x:Class="AccountManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:AccountManager.Views.Converters"
             xmlns:services="clr-namespace:AccountManager.Services"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="Indigo" SecondaryColor="Purple" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <!-- ✅ CONVERTERS (Required for XAML bindings) -->
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
            <converters:FirstLetterConverter x:Key="FirstLetterConverter"/>
            <converters:ConditionalTextConverter x:Key="ConditionalTextConverter"/>
            <converters:PasswordDisplayConverter x:Key="PasswordDisplayConverter"/>
            <converters:BoolToIconConverter x:Key="BoolToIconConverter"/>
            <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
            <converters:ValidationErrorConverter x:Key="ValidationErrorConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" IsInverted="True"/>

            <!-- ✅ CORE COLORS (Static) -->
            <SolidColorBrush x:Key="PrimaryColor" Color="#6366F1"/>
            <SolidColorBrush x:Key="AccentColor" Color="#8B5CF6"/>
            <SolidColorBrush x:Key="SuccessColor" Color="#10B981"/>
            <SolidColorBrush x:Key="DangerColor" Color="#EF4444"/>
            <SolidColorBrush x:Key="WarningColor" Color="#F59E0B"/>
            
            <!-- ✅ THEME COLORS (Dynamic - Updated by ThemeService) -->
            <SolidColorBrush x:Key="SidebarColor" Color="#1E293B"/>
            <SolidColorBrush x:Key="MainBackgroundColor" Color="#F8FAFC"/>
            <SolidColorBrush x:Key="CardBackgroundColor" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="TextPrimaryColor" Color="#1E293B"/>
            <SolidColorBrush x:Key="TextSecondaryColor" Color="#64748B"/>
            <SolidColorBrush x:Key="BorderColor" Color="#E2E8F0"/>
            <SolidColorBrush x:Key="InputBackgroundColor" Color="#F8FAFC"/>
            <SolidColorBrush x:Key="SearchBackgroundColor" Color="#F8FAFC"/>
            <SolidColorBrush x:Key="EmptyStateBackgroundColor" Color="#F8FAFC"/>
            <SolidColorBrush x:Key="SidebarTextPrimaryColor" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="SidebarTextSecondaryColor" Color="#94A3B8"/>

            <!-- ✅ ESSENTIAL STYLES ONLY -->
            
            <!-- FAB Style -->
            <Style x:Key="FABStyle" TargetType="Button">
                <Setter Property="Width" Value="56"/>
                <Setter Property="Height" Value="56"/>
                <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
                <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp6"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    CornerRadius="28">
                                <ContentPresenter HorizontalAlignment="Center"
                                                VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#4F46E5"/>
                                    <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp8"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Modern Account Card Data Template -->
            <DataTemplate x:Key="ModernAccountCardTemplate">
                <Grid Margin="6">
                    <Border Background="{DynamicResource CardBackgroundColor}"
                            BorderBrush="{DynamicResource BorderColor}"
                            BorderThickness="1"
                            CornerRadius="16"
                            Padding="16,12">
                        <Border.InputBindings>
                            <MouseBinding MouseAction="LeftClick" 
                                        Command="{Binding DataContext.EditAccountCommand, 
                                                RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"/>
                        </Border.InputBindings>
                        
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Header -->
                            <Grid Grid.Row="0" Margin="0,0,0,8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <!-- Avatar -->
                                <Border Grid.Column="0" 
                                    Background="{StaticResource PrimaryColor}"
                                    Width="40" Height="40" 
                                    CornerRadius="10">
                                    <TextBlock Text="{Binding Name, Converter={StaticResource FirstLetterConverter}}" 
                                            Foreground="White"
                                            FontSize="16" 
                                            FontWeight="Bold"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                                </Border>
                                
                                <!-- Name -->
                                <TextBlock Grid.Column="1"
                                        Text="{Binding Name}" 
                                        FontSize="16" 
                                        FontWeight="Bold"
                                        Foreground="{DynamicResource TextPrimaryColor}"
                                        VerticalAlignment="Center"
                                        Margin="12,0,0,0"/>
                                
                                <!-- Actions -->
                                <StackPanel Grid.Column="2" 
                                        Orientation="Horizontal" 
                                        VerticalAlignment="Center">
                                    <Button Style="{StaticResource MaterialDesignIconButton}"
                                        Command="{Binding DataContext.EditAccountCommand,
                                                RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Width="32" Height="32">
                                        <materialDesign:PackIcon Kind="Pencil" 
                                                            Foreground="#94A3B8" 
                                                            Width="16" Height="16"/>
                                    </Button>
                                    <Button Style="{StaticResource MaterialDesignIconButton}"
                                        Command="{Binding DataContext.DeleteAccountCommand,
                                                RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Width="32" Height="32">
                                        <materialDesign:PackIcon Kind="Delete" 
                                                            Foreground="#EF4444" 
                                                            Width="16" Height="16"/>
                                    </Button>
                                </StackPanel>
                            </Grid>

                            <!-- Account Details -->
                            <StackPanel Grid.Row="1">
                                <!-- Website -->
                                <Grid Margin="0,0,0,6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBlock Grid.Column="0" Text="Website" 
                                            Foreground="{DynamicResource TextSecondaryColor}" FontSize="14"/>
                                    
                                    <TextBlock Grid.Column="1" FontSize="14" FontWeight="Medium"
                                            Foreground="{DynamicResource TextPrimaryColor}">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource ConditionalTextConverter}">
                                                <Binding Path="Website"/>
                                                <Binding Source="{x:Static services:SettingsService.Instance}" Path="CensorAccountData"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    
                                    <Button Grid.Column="2" Style="{StaticResource MaterialDesignIconButton}"
                                        Command="{Binding DataContext.CopyWebsiteCommand,
                                                RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}" Width="24" Height="24">
                                        <materialDesign:PackIcon Kind="ContentCopy" 
                                                            Foreground="#94A3B8" Width="12" Height="12"/>
                                    </Button>
                                </Grid>
                                
                                <!-- Email -->
                                <Grid Margin="0,0,0,6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBlock Grid.Column="0" Text="Email" 
                                            Foreground="{DynamicResource TextSecondaryColor}" FontSize="14"/>
                                    
                                    <TextBlock Grid.Column="1" FontSize="14" FontWeight="Medium"
                                            Foreground="{DynamicResource TextPrimaryColor}">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource ConditionalTextConverter}">
                                                <Binding Path="Email"/>
                                                <Binding Source="{x:Static services:SettingsService.Instance}" Path="CensorAccountData"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    
                                    <Button Grid.Column="2" Style="{StaticResource MaterialDesignIconButton}"
                                        Command="{Binding DataContext.CopyEmailCommand,
                                                RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}" Width="24" Height="24">
                                        <materialDesign:PackIcon Kind="ContentCopy" 
                                                            Foreground="#94A3B8" Width="12" Height="12"/>
                                    </Button>
                                </Grid>
                                
                                <!-- Username -->
                                <Grid Margin="0,0,0,6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBlock Grid.Column="0" Text="Username" 
                                            Foreground="{DynamicResource TextSecondaryColor}" FontSize="14"/>
                                    
                                    <TextBlock Grid.Column="1" FontSize="14" FontWeight="Medium"
                                            Foreground="{DynamicResource TextPrimaryColor}">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource ConditionalTextConverter}">
                                                <Binding Path="Username"/>
                                                <Binding Source="{x:Static services:SettingsService.Instance}" Path="CensorAccountData"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    
                                    <Button Grid.Column="2" Style="{StaticResource MaterialDesignIconButton}"
                                        Command="{Binding DataContext.CopyUsernameCommand,
                                                RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}" Width="24" Height="24">
                                        <materialDesign:PackIcon Kind="ContentCopy" 
                                                            Foreground="#94A3B8" Width="12" Height="12"/>
                                    </Button>
                                </Grid>
                                
                                <!-- Password -->
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBlock Grid.Column="0" Text="Password" 
                                            Foreground="{DynamicResource TextSecondaryColor}" FontSize="14"/>
                                    
                                    <TextBlock Grid.Column="1" FontSize="14" FontWeight="Medium"
                                            Foreground="{DynamicResource TextPrimaryColor}">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource PasswordDisplayConverter}">
                                                <Binding Path="Password"/>
                                                <Binding Source="{x:Static services:SettingsService.Instance}" Path="CensorPassword"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>

                                    <Button Grid.Column="2" Style="{StaticResource MaterialDesignIconButton}"
                                        Command="{Binding DataContext.CopyPasswordCommand,
                                                RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}" Width="24" Height="24">
                                        <materialDesign:PackIcon Kind="ContentCopy" 
                                                            Foreground="#94A3B8" Width="12" Height="12"/>
                                    </Button>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </Border>
                </Grid>
            </DataTemplate>

            <!-- Theme Toggle Button -->
            <Style x:Key="ThemeToggleButton" TargetType="Button">
                <Setter Property="Width" Value="44"/>
                <Setter Property="Height" Value="44"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="22">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource InputBackgroundColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Window Control Buttons -->
            <Style x:Key="WindowControlButton" TargetType="Button">
                <Setter Property="Width" Value="32"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="6">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource InputBackgroundColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="WindowControlCloseButton" TargetType="Button" BasedOn="{StaticResource WindowControlButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="6">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource DangerColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Modern Glass Panel -->
            <Style x:Key="GlassPanel" TargetType="Border">
                <Setter Property="CornerRadius" Value="24"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="#4F46E5" Opacity="0.15" ShadowDepth="16" BlurRadius="32"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Modern TextBox -->
            <Style x:Key="ModernTextBox" TargetType="TextBox">
                <Setter Property="Background" Value="{DynamicResource InputBackgroundColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="8">
                                <ScrollViewer x:Name="PART_ContentHost"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                                    <Setter Property="BorderThickness" Value="2"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Primary Button -->
            <Style x:Key="PrimaryButton" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="16,8"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="12">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                                Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#4F46E5"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#94A3B8"/>
                                    <Setter Property="Foreground" Value="#64748B"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Secondary Button -->
            <Style x:Key="SecondaryButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource TextSecondaryColor}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                <Setter Property="Padding" Value="16,8"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="12">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                                Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource InputBackgroundColor}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Modern ScrollViewer -->
            <Style x:Key="ModernScrollViewer" TargetType="ScrollViewer">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollViewer">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                      Grid.Column="0" Grid.Row="0"
                                                      CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                      Content="{TemplateBinding Content}"
                                                      Margin="{TemplateBinding Padding}"/>
                                
                                <ScrollBar x:Name="PART_VerticalScrollBar" 
                                         Grid.Column="1" Grid.Row="0"
                                         Maximum="{TemplateBinding ScrollableHeight}" 
                                         Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                         Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                         ViewportSize="{TemplateBinding ViewportHeight}"/>
                                
                                <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                         Grid.Column="0" Grid.Row="1"
                                         Maximum="{TemplateBinding ScrollableWidth}" 
                                         Orientation="Horizontal"
                                         Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                         Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                         ViewportSize="{TemplateBinding ViewportWidth}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>