<Application x:Class="AccountManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:AccountManager.Converters"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="Indigo" SecondaryColor="Purple" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!-- Converters with error handling -->
            <converters:BoolToStringConverter x:Key="BoolToStringConverter"/>
            <converters:BoolToIconConverter x:Key="BoolToIconConverter"/>
            <converters:FirstLetterConverter x:Key="FirstLetterConverter"/>

            <!-- Core Brand Colors (Static) -->
            <SolidColorBrush x:Key="PrimaryColor" Color="#6366F1"/>
            <SolidColorBrush x:Key="AccentColor" Color="#8B5CF6"/>
            <SolidColorBrush x:Key="SuccessColor" Color="#10B981"/>
            <SolidColorBrush x:Key="DangerColor" Color="#EF4444"/>
            <SolidColorBrush x:Key="WarningColor" Color="#F59E0B"/>
            
            <!-- Theme-Dependent Colors (Dynamic) -->
            <SolidColorBrush x:Key="SidebarColor" Color="#1E293B"/>
            <SolidColorBrush x:Key="MainBackgroundColor" Color="#F8FAFC"/>
            <SolidColorBrush x:Key="CardBackgroundColor" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="TextPrimaryColor" Color="#1E293B"/>
            <SolidColorBrush x:Key="TextSecondaryColor" Color="#64748B"/>
            <SolidColorBrush x:Key="BorderColor" Color="#E2E8F0"/>
            <SolidColorBrush x:Key="InputBackgroundColor" Color="#F8FAFC"/>
            <SolidColorBrush x:Key="SearchBackgroundColor" Color="#F8FAFC"/>
            <SolidColorBrush x:Key="EmptyStateBackgroundColor" Color="#F8FAFC"/>
            <SolidColorBrush x:Key="SidebarTextPrimaryColor" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="SidebarTextSecondaryColor" Color="#94A3B8"/>

            <!-- Enhanced Floating Action Button Style -->
            <Style x:Key="FABStyle" TargetType="Button">
                <Setter Property="Width" Value="56"/>
                <Setter Property="Height" Value="56"/>
                <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
                <Setter Property="materialDesign:RippleAssist.ClipToBounds" Value="True"/>
                <Setter Property="materialDesign:RippleAssist.IsCentered" Value="True"/>
                <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp6"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="FabBorder"
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="28"
                                    RenderTransformOrigin="0.5,0.5"
                                    UseLayoutRounding="True">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="FabScale" ScaleX="1" ScaleY="1"/>
                                </Border.RenderTransform>
                                
                                <Grid>
                                    <!-- Content Presenter for Button Text -->
                                    <ContentPresenter HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    UseLayoutRounding="True"
                                                    TextOptions.TextFormattingMode="Display"
                                                    TextOptions.TextRenderingMode="ClearType"/>
                                    
                                    <!-- Material Design Ripple Effect Overlay -->
                                    <materialDesign:Ripple Focusable="False"
                                                        HorizontalContentAlignment="Stretch"
                                                        VerticalContentAlignment="Stretch"
                                                        Feedback="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:RippleAssist.Feedback)}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <materialDesign:Ripple.Clip>
                                            <EllipseGeometry RadiusX="28" RadiusY="28" Center="28,28"/>
                                        </materialDesign:Ripple.Clip>
                                    </materialDesign:Ripple>
                                </Grid>
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <!-- Hover Effect -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="FabScale"
                                                            Storyboard.TargetProperty="ScaleX"
                                                            To="1.1"
                                                            Duration="0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="FabScale"
                                                            Storyboard.TargetProperty="ScaleY"
                                                            To="1.1"
                                                            Duration="0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="FabScale"
                                                            Storyboard.TargetProperty="ScaleX"
                                                            To="1"
                                                            Duration="0:0:0.4">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="6"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="FabScale"
                                                            Storyboard.TargetProperty="ScaleY"
                                                            To="1"
                                                            Duration="0:0:0.4">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="6"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                    <Setter TargetName="FabBorder" Property="Background" Value="#4F46E5"/>
                                    <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp8"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- Modern Card Style -->
            <Style x:Key="ModernAccountCard" TargetType="Border">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#1E293B" Opacity="0.8"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="#334155" Opacity="0.6"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="16"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="Padding" Value="16,12,16,12"/>
                <Setter Property="Margin" Value="6"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="materialDesign:RippleAssist.Feedback" Value="#6366F1"/>
                <Setter Property="materialDesign:RippleAssist.ClipToBounds" Value="True"/>
                <Setter Property="materialDesign:RippleAssist.IsCentered" Value="False"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!-- Hover Effect -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                To="1.02"
                                                Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                To="1.02"
                                                Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <ColorAnimation Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                To="#6366F1"
                                                Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                To="1"
                                                Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="4"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                To="1"
                                                Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="4"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <ColorAnimation Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                To="#334155"
                                                Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Account Card Content Template -->
            <DataTemplate x:Key="ModernAccountCardTemplate">
                <Grid Margin="6">
                    <!-- Background Border (scales independently) -->
                    <Border x:Name="CardBackground"
                            Background="{DynamicResource CardBackgroundColor}"
                            BorderBrush="{DynamicResource BorderColor}"
                            BorderThickness="1"
                            CornerRadius="16"
                            UseLayoutRounding="True"
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="CardScale" ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                    </Border>
                    
                    <!-- Static Content Layer (never transforms) -->
                    <Border Padding="16,12,16,12"
                            CornerRadius="16">
                        <Border.InputBindings>
                            <MouseBinding MouseAction="LeftClick" 
                                        Command="{Binding DataContext.EditAccountCommand, 
                                                RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"/>
                        </Border.InputBindings>
                        
                        <Grid>
                            <!-- Ripple Overlay -->
                            <materialDesign:Ripple Focusable="False"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Stretch"
                                                Feedback="#6366F1">
                                <materialDesign:Ripple.Clip>
                                    <RectangleGeometry RadiusX="16" RadiusY="16"/>
                                </materialDesign:Ripple.Clip>
                            </materialDesign:Ripple>
                            
                            <!-- Card Content -->
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- Header with Avatar and Actions -->
                                <Grid Grid.Row="0" Margin="0,0,0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Avatar -->
                                    <Border Grid.Column="0" 
                                        Background="{StaticResource PrimaryColor}"
                                        Width="40" Height="40" 
                                        CornerRadius="10">
                                        <TextBlock Text="{Binding Name, Converter={StaticResource FirstLetterConverter}, FallbackValue=A}" 
                                                Foreground="White"
                                                FontSize="16" 
                                                FontWeight="Bold"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                UseLayoutRounding="True"
                                                TextOptions.TextFormattingMode="Display"
                                                TextOptions.TextRenderingMode="ClearType"/>
                                    </Border>
                                    
                                    <!-- Account Name -->
                                    <TextBlock Grid.Column="1"
                                            Text="{Binding Name}" 
                                            FontSize="16" 
                                            FontWeight="Bold"
                                            Foreground="{DynamicResource TextPrimaryColor}"
                                            VerticalAlignment="Center"
                                            Margin="12,0,0,0"
                                            UseLayoutRounding="True"
                                            TextOptions.TextFormattingMode="Display"
                                            TextOptions.TextRenderingMode="ClearType"/>
                                    
                                    <!-- Action Buttons -->
                                    <StackPanel Grid.Column="2" 
                                            Orientation="Horizontal" 
                                            VerticalAlignment="Center">
                                        <Button Style="{StaticResource MaterialDesignIconButton}"
                                            ToolTip="Edit Account"
                                            Command="{Binding DataContext.EditAccountCommand,
                                                    RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}"
                                            Width="32" Height="32">
                                            <materialDesign:PackIcon Kind="Pencil" 
                                                                Foreground="#94A3B8" 
                                                                Width="16" Height="16"/>
                                        </Button>
                                        <Button Style="{StaticResource MaterialDesignIconButton}"
                                            ToolTip="Delete Account"
                                            Command="{Binding DataContext.DeleteAccountCommand,
                                                    RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}"
                                            Width="32" Height="32">
                                            <materialDesign:PackIcon Kind="Delete" 
                                                                Foreground="#EF4444" 
                                                                Width="16" Height="16"/>
                                        </Button>
                                    </StackPanel>
                                </Grid>

                                <!-- Account Details -->
                                <StackPanel Grid.Row="1">
                                    <!-- Email -->
                                    <Grid Margin="0,0,0,6">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Column="0"
                                                Text="Email" 
                                                Foreground="{DynamicResource TextSecondaryColor}"
                                                FontSize="14"
                                                UseLayoutRounding="True"
                                                TextOptions.TextFormattingMode="Display"
                                                TextOptions.TextRenderingMode="ClearType"/>
                                        
                                        <TextBlock Grid.Column="1"
                                                Text="{Binding Email}" 
                                                Foreground="{DynamicResource TextPrimaryColor}"
                                                FontSize="14"
                                                FontWeight="Medium"
                                                UseLayoutRounding="True"
                                                TextOptions.TextFormattingMode="Display"
                                                TextOptions.TextRenderingMode="ClearType"/>
                                        
                                        <Button Grid.Column="2"
                                            Style="{StaticResource MaterialDesignIconButton}"
                                            Command="{Binding DataContext.CopyEmailCommand,
                                                    RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}"
                                            ToolTip="Copy Email"
                                            Width="24" Height="24">
                                            <materialDesign:PackIcon Kind="ContentCopy" 
                                                                Foreground="#94A3B8" 
                                                                Width="12" Height="12"/>
                                        </Button>
                                    </Grid>
                                    
                                    <!-- Username -->
                                    <Grid Margin="0,0,0,6">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Column="0"
                                                Text="Username" 
                                                Foreground="{DynamicResource TextSecondaryColor}"
                                                FontSize="14"
                                                UseLayoutRounding="True"
                                                TextOptions.TextFormattingMode="Display"
                                                TextOptions.TextRenderingMode="ClearType"/>
                                        
                                        <TextBlock Grid.Column="1"
                                                Text="{Binding Username}" 
                                                Foreground="{DynamicResource TextPrimaryColor}"
                                                FontSize="14"
                                                FontWeight="Medium"
                                                UseLayoutRounding="True"
                                                TextOptions.TextFormattingMode="Display"
                                                TextOptions.TextRenderingMode="ClearType"/>
                                        
                                        <Button Grid.Column="2"
                                            Style="{StaticResource MaterialDesignIconButton}"
                                            Command="{Binding DataContext.CopyUsernameCommand,
                                                    RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}"
                                            ToolTip="Copy Username"
                                            Width="24" Height="24">
                                            <materialDesign:PackIcon Kind="ContentCopy" 
                                                                Foreground="#94A3B8" 
                                                                Width="12" Height="12"/>
                                        </Button>
                                    </Grid>
                                    
                                    <!-- Password -->
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Column="0"
                                                Text="Password" 
                                                Foreground="{DynamicResource TextSecondaryColor}"
                                                FontSize="14"
                                                UseLayoutRounding="True"
                                                TextOptions.TextFormattingMode="Display"
                                                TextOptions.TextRenderingMode="ClearType"/>
                                        
                                        <TextBlock Grid.Column="1"
                                                Text="••••••••••••" 
                                                Foreground="{DynamicResource TextPrimaryColor}"
                                                FontSize="14"
                                                FontWeight="Medium"
                                                UseLayoutRounding="True"
                                                TextOptions.TextFormattingMode="Display"
                                                TextOptions.TextRenderingMode="ClearType"/>
                                        
                                        <Button Grid.Column="2"
                                            Style="{StaticResource MaterialDesignIconButton}"
                                            ToolTip="Copy Password"
                                            Command="{Binding DataContext.CopyPasswordCommand,
                                                    RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}"
                                            Width="24" Height="24">
                                            <materialDesign:PackIcon Kind="ContentCopy" 
                                                                Foreground="#94A3B8" 
                                                                Width="12" Height="12"/>
                                        </Button>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                    
                    <!-- Hover Triggers -->
                    <Grid.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="CardScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="1.02"
                                                Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="CardScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="1.02"
                                                Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <ColorAnimation Storyboard.TargetName="CardBackground"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="#6366F1"
                                                Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="CardScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="1"
                                                Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="4"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="CardScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="1"
                                                Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="4"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <ColorAnimation Storyboard.TargetName="CardBackground"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Grid.Triggers>
                </Grid>
            </DataTemplate>

            <!-- Theme Toggle Button Style -->
            <Style x:Key="ThemeToggleButton" TargetType="Button">
                <Setter Property="Width" Value="44"/>
                <Setter Property="Height" Value="44"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="22">
                                <ContentPresenter HorizontalAlignment="Center"
                                                VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="White" Opacity="0.1"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Modern Glass Effect for Dialogs -->
            <Style x:Key="GlassPanel" TargetType="Border">
                <Setter Property="CornerRadius" Value="24"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="#4F46E5" Opacity="0.15" ShadowDepth="16" BlurRadius="32"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Modern TextBox Style -->
            <Style x:Key="ModernTextBox" TargetType="TextBox">
                <Setter Property="Background" Value="{DynamicResource InputBackgroundColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="8">
                                <ScrollViewer x:Name="PART_ContentHost"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                                    <Setter Property="BorderThickness" Value="2"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Enhanced Primary Button Style -->
            <Style x:Key="PrimaryButton" TargetType="Button">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="#7C3AED" Offset="0"/>
                            <GradientStop Color="#A855F7" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="16,8"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
                <Setter Property="materialDesign:RippleAssist.ClipToBounds" Value="True"/>
                <Setter Property="materialDesign:RippleAssist.IsCentered" Value="False"/>
                <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <!-- Background Border (scales independently) -->
                                <Border x:Name="ButtonBorder"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="12"
                                        UseLayoutRounding="True"
                                        RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1"/>
                                    </Border.RenderTransform>
                                </Border>
                                
                                <!-- Static Content Layer (never transforms) -->
                                <Grid>
                                    <!-- Content Presenter for Button Text (always crisp) -->
                                    <ContentPresenter HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Margin="{TemplateBinding Padding}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    UseLayoutRounding="True"
                                                    TextOptions.TextFormattingMode="Display"
                                                    TextOptions.TextRenderingMode="ClearType"/>
                                    
                                    <!-- Material Design Ripple Effect Overlay -->
                                    <materialDesign:Ripple Focusable="False"
                                                        HorizontalContentAlignment="Stretch"
                                                        VerticalContentAlignment="Stretch"
                                                        Feedback="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:RippleAssist.Feedback)}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <materialDesign:Ripple.Clip>
                                            <RectangleGeometry RadiusX="12" RadiusY="12"/>
                                        </materialDesign:Ripple.Clip>
                                    </materialDesign:Ripple>
                                </Grid>
                            </Grid>
                            
                            <ControlTemplate.Triggers>
                                <!-- Hover Effect -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                            Storyboard.TargetProperty="ScaleX"
                                                            To="1.05"
                                                            Duration="0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                            Storyboard.TargetProperty="ScaleY"
                                                            To="1.05"
                                                            Duration="0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                            Storyboard.TargetProperty="ScaleX"
                                                            To="1"
                                                            Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="4"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                            Storyboard.TargetProperty="ScaleY"
                                                            To="1"
                                                            Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="4"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                    <Setter TargetName="ButtonBorder" Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                <GradientStop Color="#6D28D9" Offset="0"/>
                                                <GradientStop Color="#9333EA" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp4"/>
                                </Trigger>
                                
                                <!-- Disabled State -->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ButtonBorder" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#94A3B8" Opacity="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Foreground" Value="#64748B"/>
                                    <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        <!-- Modern ScrollBar Thumbs -->
        <Style x:Key="VerticalScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Fill="#94A3B8"
                                RadiusX="4"
                                RadiusY="4"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="#64748B"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Height" Value="6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Fill="#94A3B8"
                                RadiusX="4"
                                RadiusY="4"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="#64748B"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern ScrollBar Page Button (invisible) -->
        <Style x:Key="ModernScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern ScrollBar Style -->
        <Style x:Key="ModernScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0,0,1,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition Height="0"/>
                            </Grid.RowDefinitions>
                            
                            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource ModernScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource ModernScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource VerticalScrollBarThumb}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="8"/>
                    <Setter Property="MinHeight" Value="8"/>
                    <Setter Property="Margin" Value="0,0,0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition Width="0"/>
                                    </Grid.ColumnDefinitions>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource ModernScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource ModernScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource HorizontalScrollBarThumb}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modern ScrollViewer -->
        <Style x:Key="ModernScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource ModernScrollBar}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource ModernScrollBar}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

            <!-- Enhanced Secondary Button Style -->
            <Style x:Key="SecondaryButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource TextSecondaryColor}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                <Setter Property="Padding" Value="16,8"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="materialDesign:RippleAssist.Feedback" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="materialDesign:RippleAssist.ClipToBounds" Value="True"/>
                <Setter Property="materialDesign:RippleAssist.IsCentered" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <!-- Background Border (scales independently) -->
                                <Border x:Name="SecondaryBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="12"
                                        UseLayoutRounding="True"
                                        RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <ScaleTransform x:Name="SecondaryScale" ScaleX="1" ScaleY="1"/>
                                    </Border.RenderTransform>
                                </Border>
                                
                                <!-- Static Content Layer (never transforms) -->
                                <Grid>
                                    <!-- Content Presenter for Button Text (always crisp) -->
                                    <ContentPresenter HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Margin="{TemplateBinding Padding}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    UseLayoutRounding="True"
                                                    TextOptions.TextFormattingMode="Display"
                                                    TextOptions.TextRenderingMode="ClearType"/>
                                    
                                    <!-- Material Design Ripple Effect Overlay -->
                                    <materialDesign:Ripple Focusable="False"
                                                        HorizontalContentAlignment="Stretch"
                                                        VerticalContentAlignment="Stretch"
                                                        Feedback="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:RippleAssist.Feedback)}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <materialDesign:Ripple.Clip>
                                            <RectangleGeometry RadiusX="12" RadiusY="12"/>
                                        </materialDesign:Ripple.Clip>
                                    </materialDesign:Ripple>
                                </Grid>
                            </Grid>
                            
                            <ControlTemplate.Triggers>
                                <!-- Hover Effect -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="SecondaryScale"
                                                            Storyboard.TargetProperty="ScaleX"
                                                            To="1.03"
                                                            Duration="0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="SecondaryScale"
                                                            Storyboard.TargetProperty="ScaleY"
                                                            To="1.03"
                                                            Duration="0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="SecondaryScale"
                                                            Storyboard.TargetProperty="ScaleX"
                                                            To="1"
                                                            Duration="0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="SecondaryScale"
                                                            Storyboard.TargetProperty="ScaleY"
                                                            To="1"
                                                            Duration="0:0:0.2">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                    <Setter TargetName="SecondaryBorder" Property="Background" Value="{DynamicResource InputBackgroundColor}"/>
                                    <Setter TargetName="SecondaryBorder" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>