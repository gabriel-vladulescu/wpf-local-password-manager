<UserControl x:Class="AccountManager.Views.Window.Content.ContentContainer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:contentViews="clr-namespace:AccountManager.Views.Window.Content"
             xmlns:searchViews="clr-namespace:AccountManager.Views.Window.Search"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d">

    <Grid Margin="16,12,16,16">
        <!-- Accounts Content -->
        <Border Background="Transparent"
                CornerRadius="16"
                Visibility="{Binding IsAccountsPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border.Effect>
                <DropShadowEffect Color="Black" Opacity="0.03" ShadowDepth="2" BlurRadius="8"/>
            </Border.Effect>
            
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Modern Header with Glass Effect -->
                <Border Grid.Row="0"
                        Padding="6,0,0,0">
                    <Grid>
                        <!-- Header Layout: Breadcrumb + Group Name (Left) | Toggle (Right) -->
                        <Grid Margin="0,0,0,8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <!-- Left Section: Breadcrumb + Group Info + Search -->
                            <StackPanel Grid.Column="0" 
                                      VerticalAlignment="Top" 
                                      HorizontalAlignment="Left" 
                                      MinWidth="500">
                                <!-- Breadcrumb with Icon and Group Name -->
                                <StackPanel Orientation="Horizontal" 
                                          HorizontalAlignment="Left"
                                          Margin="0,0,0,12">
                                    <TextBlock Text="Vaults" 
                                              FontSize="14"
                                              FontWeight="Regular"
                                              Foreground="{DynamicResource SidebarTextSecondaryColor}"
                                              Opacity="0.7"
                                              VerticalAlignment="Center"/>
                                    <TextBlock Text=" > " 
                                              FontSize="14"
                                              Foreground="{DynamicResource SidebarTextSecondaryColor}"
                                              Opacity="0.5"
                                              Margin="6,0"
                                              VerticalAlignment="Center"/>
                                    
                                    <!-- Group Icon -->
                                    <materialDesign:PackIcon Kind="{Binding HeaderIcon}" 
                                                            VerticalAlignment="Center" 
                                                            HorizontalAlignment="Left"
                                                            Foreground="{DynamicResource SidebarTextSecondaryColor}"
                                                            Width="14" Height="14"
                                                            Margin="0,0,8,0"/>
                                    
                                    <!-- Group Name -->
                                    <TextBlock Text="{Binding HeaderTitle}" 
                                              FontSize="14" 
                                              FontWeight="Regular"
                                              Foreground="{DynamicResource SidebarTextSecondaryColor}"
                                              VerticalAlignment="Center"/>
                                </StackPanel>
                                
                                <!-- Search Box -->
                                <searchViews:LocalSearch />
                            </StackPanel>
                            
                            <!-- Right Section: View Mode Toggle + Add Account Button -->
                            <StackPanel Grid.Column="1" 
                                      Orientation="Horizontal" 
                                      VerticalAlignment="Top">
                                
                                <!-- Add Account Button - Shown when accounts exist in regular group -->
                                <Button Command="{Binding AddAccountCommand}"
                                        Width="32" Height="32"
                                        ToolTip="Add Account">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextSecondaryColor}"/>
                                            <Style.Triggers>
                                                <!-- Show when: Can add account AND has existing accounts (not empty state) -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding CanAddAccount}" Value="True"/>
                                                        <Condition Binding="{Binding DisplayedAccounts.Count}" Value="0"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </MultiDataTrigger>
                                                <DataTrigger Binding="{Binding CanAddAccount}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="8">
                                                <materialDesign:PackIcon Kind="Plus" 
                                                                        Width="16" Height="16"
                                                                        HorizontalAlignment="Center"
                                                                        VerticalAlignment="Center"
                                                                        Foreground="{TemplateBinding Foreground}"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                
                                <ToggleButton x:Name="ViewModeToggle"
                                            IsChecked="{Binding IsListViewMode, Mode=TwoWay}"
                                            Width="32" Height="32"
                                            VerticalAlignment="Top"
                                            Margin="8,0,0,0">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="1"
                                                CornerRadius="8">
                                            <Grid>
                                                <!-- Grid Icon (when IsChecked=False, showing Box View) -->
                                                <materialDesign:PackIcon x:Name="GridIcon"
                                                                        Kind="ViewGrid"
                                                                        Width="16" Height="16"
                                                                        HorizontalAlignment="Center"
                                                                        VerticalAlignment="Center"
                                                                        Foreground="{TemplateBinding Foreground}"/>
                                                
                                                <!-- List Icon (when IsChecked=True, showing List View) -->
                                                <materialDesign:PackIcon x:Name="ListIcon"
                                                                        Kind="ViewList"
                                                                        Width="16" Height="16"
                                                                        HorizontalAlignment="Center"
                                                                        VerticalAlignment="Center"
                                                                        Foreground="{TemplateBinding Foreground}"
                                                                        Visibility="Collapsed"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="GridIcon" Property="Visibility" Value="Collapsed"/>
                                                <Setter TargetName="ListIcon" Property="Visibility" Value="Visible"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource TextSecondaryColor}"/>
                                        <Setter Property="ToolTip" Value="Switch to List View"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="ToolTip" Value="Switch to Grid View"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                                </ToggleButton>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Border>

                <!-- Content Area - No Background -->
                <Grid Grid.Row="2" Margin="0,16,0,0">
                    <!-- Account Grid -->
                    <contentViews:AccountGrid />
                </Grid>
            </Grid>
        </Border>

    </Grid>

</UserControl>